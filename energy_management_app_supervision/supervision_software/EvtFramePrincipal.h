#ifndef __EvtFramePrincipal__
#define __EvtFramePrincipal__

/**
@file
Subclass of FramePrincipal, which is generated by wxFormBuilder.
*/

#include "FramePrincipal.h"

//// end generated include
#include <wx/vector.h>
#include <wx/string.h>
#include <vector>
#include <string>
#include <iostream>
#include "DATA_BASE.h"
#include "CustomEvents.h"
#include "Thread_action.h"
#include "Thread_get_data.h"
#include "Thread_monitor.h"
#include "Thread_plot.h"
#include <wx/log.h>
#include <wx/utils.h>

class Thread_action;
class Thread_get_data;
class Thread_monitor;
class Thread_plot;

#define NOMBRE_BOUTTON_SECTEUR_ACTIVER 8
#define NOMBRE_BOUTTON_ECRANS 16
#define NOMBRE_BOUTTON_PC 16
#define NOMBRE_BUTTON_24H 16
#define NOMBRE_BOUTTON_APPLIQUE 8

//#include "DATA_BASE.h"

/** Implementing FramePrincipal */
class EvtFramePrincipal : public FramePrincipal
{
	protected:
		// Handlers for FramePrincipal events.
		
	public:
		/** Constructor */
		EvtFramePrincipal( wxWindow* parent );
	//// end generated class members
		void matching_secteur_name_and_button_activer_id();
		bool is_button_id_in_vector(const vector<int>& my_vector, int button_id);
		void Set_text_controle_value(const wxString& module_id, const wxString& type_mesure, double value_mesure);
		string extract_module_name(const string& texte);
		
		void button_active_clicked(int id, bool found, string nom_secteur, wxCommandEvent& event);
		void button_pc_clicked(int id, bool found, string nom_module, wxCommandEvent& event);
		void button_24h_clicked(int id, bool found, string nom_module);
		void button_applique_clicked(int id, bool found);
		
				
		void OnUpdateCompleted(wxCommandEvent& event);
		void OnGetDataCompleted(wxCommandEvent& event);
		void OnPlotCompleted(wxCommandEvent& event);
		void OnMonitorUpdate(wxCommandEvent& event);

		//void OnButtonClicked(wxCommandEvent& event);
		void OnRetrieveData(wxCommandEvent& event);
		void OnUpdateDatabase(wxCommandEvent& event);
		
		void OnToggleButtonClicked(wxCommandEvent& event);
		void OnButtonClicked(wxCommandEvent& event);
		void OnCloseapp( wxCloseEvent& event );
		
		
		Thread_action *m_thread_action;
		Thread_get_data *m_thread_get_data;
		Thread_monitor *m_thread_monitor;
		Thread_plot *m_thread_plot;

	private:
		
		vector<int> m_vecteur_id_activer_secteur;
		vector<int> m_vecteur_id_ecrans_module;
		vector<int> m_vecteur_id_pc_module;
		vector<int> m_vecteur_id_24h;
		vector<int> m_vector_id_applique;
		void InitDatabase();
		DATA_BASE& m_data_base = DATA_BASE::getInstance();
		//DATA_BASE *DataBase = new DATA_BASE;
		vector<string> list_secteurs;
		vector<MACHINE> list_machines;
		vector<string> list_modules;
		vector<MESURE> m_mesures_historiques;
		wxDatePickerCtrl* date_choisi;
		wxTimePickerCtrl* heure_choisi;
		
		
		

		wxDECLARE_EVENT_TABLE();

};

#endif // __EvtFramePrincipal__
